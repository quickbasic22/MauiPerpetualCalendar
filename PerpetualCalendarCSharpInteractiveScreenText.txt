Microsoft (R) Visual C# Interactive Compiler version 4.4.0-2.22430.14 ()
Loading context from 'CSharpInteractive.rsp'.
Type "#help" for more information.
> #r "C:\Users\quick\source\repos\MauiPerpetualCalendar\MauiPerpetualCalendar\PerpetualCalendar.dll"
> MauiPerpetualCalendar.PerpetualCalendar calendar = new MauiPerpetualCalendar.PerpetualCalendar();
> calendar.YearList["4"].ToList();
(1,19): error CS1503: Argument 1: cannot convert from 'string' to 'int'
> var cal4 = calendar.YearList[4].ToList();
> cal4.Take(5)
TakeIterator { 1586, 1597, 1603, 1625, 1614 }
> cal4
List<int>(53) { 1586, 1597, 1603, 1625, 1614, 1631, 1642, 1653, 1659, 1670, 1681, 1687, 1698, 1710, 1721, 1727, 1738, 1749, 1755, 1766, 1777, 1783, 1794, 1800, 1806, 1817, 1823, 1834, 1845, 1851, 1862, 1873, 1879, 1890, 1902, 1913, 1919, 1930, 1941, 1947, 1958, 1969, 1975, 1986, 1997, 2003, 2014, 2025, 2031, 2042, 2053, 2059, 2070 }
> var cal4 = calendar.YearList[4];
> cal4
int[53] { 1586, 1597, 1603, 1625, 1614, 1631, 1642, 1653, 1659, 1670, 1681, 1687, 1698, 1710, 1721, 1727, 1738, 1749, 1755, 1766, 1777, 1783, 1794, 1800, 1806, 1817, 1823, 1834, 1845, 1851, 1862, 1873, 1879, 1890, 1902, 1913, 1919, 1930, 1941, 1947, 1958, 1969, 1975, 1986, 1997, 2003, 2014, 2025, 2031, 2042, 2053, 2059, 2070 }
> cal4[20];
(1,1): error CS0201: Only assignment, call, increment, decrement, await, and new object expressions can be used as a statement
> cal4[20]
1777
> cal4[22]
1794
> cal4.Where(x => x > 1599 && x < 1800)
Enumerable.WhereArrayIterator<int> { 1603, 1625, 1614, 1631, 1642, 1653, 1659, 1670, 1681, 1687, 1698, 1710, 1721, 1727, 1738, 1749, 1755, 1766, 1777, 1783, 1794 }
> cal4.Where(x => x > 1899)
Enumerable.WhereArrayIterator<int> { 1902, 1913, 1919, 1930, 1941, 1947, 1958, 1969, 1975, 1986, 1997, 2003, 2014, 2025, 2031, 2042, 2053, 2059, 2070 }
> calendar.YearList.ContainsValue(1973)
(1,33): error CS1503: Argument 1: cannot convert from 'int' to 'int[]'
> int[] myyear = { 1973, 1973 };
> myyear
int[2] { 1973, 1973 }
> calendar.YearList.ContainsValue(myyear)
false
> calendar.YearList.ContainsValue(int[2] { 1973, 1999});
(1,33): error CS1525: Invalid expression term 'int'
(1,40): error CS1026: ) expected
(1,40): error CS1002: ; expected
(1,46): error CS1002: ; expected
(1,46): error CS1513: } expected
 + additional 2 errors
> calendar.YearList.ContainsValue(@(1973, 1999));
(1,33): error CS1646: Keyword, identifier, or string expected after verbatim specifier: @
> calendar.YearList.ContainsValue(new int[] {1973, 1999})
false
> calendar.YearList.ContainsValue(new int[] {1973, 2002})
false
> calendar.YearList.ContainsValue(new int[] {1973})
false
> calendar.YearList.ContainsValue(new int[] { 1973 });
> calendar.YearList.ContainsValue(new int[] { 1973 })
false
> calendar.YearList.ContainsKey(4)
true
> calendar.YearList.ContainsKey(14)
true
> calendar.YearList.ContainsKey(15)
false
> calendar.YearList.ContainsValue(calendar[3])
(1,33): error CS0021: Cannot apply indexing with [] to an expression of type 'PerpetualCalendar'
> calendar[4]
(1,1): error CS0021: Cannot apply indexing with [] to an expression of type 'PerpetualCalendar'
> calendar.YearList.ContainsValue(calendar.Year8);
(1,33): error CS1503: Argument 1: cannot convert from 'System.Collections.Generic.List<int>' to 'int[]'
> calendar.YearList.ContainsValue(calendar.Year8)
(1,33): error CS1503: Argument 1: cannot convert from 'System.Collections.Generic.List<int>' to 'int[]'
> calendar.YearList.ContainsValue(calendar.Year8.ToList())
(1,33): error CS1503: Argument 1: cannot convert from 'System.Collections.Generic.List<int>' to 'int[]'
> calendar.YearList.ContainsValue(calendar.Year8.ToArray())
System.NullReferenceException: Object reference not set to an instance of an object.
> calendar.YearList.ContainsValue(new calendar.Year8.ToArray())
(1,37): error CS0246: The type or namespace name 'calendar' could not be found (are you missing a using directive or an assembly reference?)
> calendar.YearList.ContainsValue(calendar.YearList[4].ToArray())
false
> calendar.YearList[4].ToArray()
int[53] { 1586, 1597, 1603, 1625, 1614, 1631, 1642, 1653, 1659, 1670, 1681, 1687, 1698, 1710, 1721, 1727, 1738, 1749, 1755, 1766, 1777, 1783, 1794, 1800, 1806, 1817, 1823, 1834, 1845, 1851, 1862, 1873, 1879, 1890, 1902, 1913, 1919, 1930, 1941, 1947, 1958, 1969, 1975, 1986, 1997, 2003, 2014, 2025, 2031, 2042, 2053, 2059, 2070 }
> calendar.YearList.ContainsValue(calendar.YearList[1].ToArray())
false
> calendar.YearList.Values
Dictionary<int, int[]>.ValueCollection(14) { int[54] { 1589, 1595, 1606, 1617, 1623, 1634, 1645, 1651, 1662, 1673, 1679, 1690, 1702, 1713, 1719, 1730, 1741, 1747, 1758, 1769, 1775, 1786, 1797, 1809, 1815, 1826, 1837, 1843, 1854, 1865, 1871, 1882, 1893, 1899, 1905, 1911, 1922, 1933, 1939, 1950, 1961, 1967, 1978, 1989, 1995, 2006, 2017, 2023, 2034, 2045, 2051, 2062, 2073, 2079 }, int[53] { 1590, 1601, 1607, 1618, 1629, 1635, 1646, 1657, 1663, 1674, 1685, 1691, 1703, 1714, 1725, 1731, 1742, 1753, 1759, 1770, 1781, 1787, 1798, 1810, 1821, 1827, 1838, 1849, 1855, 1866, 1877, 1883, 1894, 1900, 1906, 1917, 1923, 1934, 1945, 1951, 1962, 1973, 1979, 1990, 2001, 2007, 2018, 2029, 2035, 2046, 2057, 2063, 2074 }, int[55] { 1585, 1591, 1602, 1613, 1619, 1630, 1641, 1647, 1658, 1669, 1675, 1686, 1697, 1709, 1715, 1726, 1737, 1743, 1754, 1765, 1771, 1782, 1793, 1799, 1805, 1811, 1822, 1833, 1839, 1850, 1861, 1867, 1878, 1889, 1895, 1901, 1907, 1918, 1929, 1935, 1946, 1957, 1963, 1974, 1985, 1991, 2002, 2013, 2019, 2030, 204...
> calendar.YearList.ContainsValue(calendar.YearList.Values)
(1,33): error CS1503: Argument 1: cannot convert from 'System.Collections.Generic.Dictionary<int, int[]>.ValueCollection' to 'int[]'
> calendar.YearList.ContainsValue(calendar.YearList.Keys)
(1,33): error CS1503: Argument 1: cannot convert from 'System.Collections.Generic.Dictionary<int, int[]>.KeyCollection' to 'int[]'
> calendar.YearList.Keys
Dictionary<int, int[]>.KeyCollection(14) { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
> if (calendar.YearList.Values.Contains(new int[] {1973}))
(1,57): error CS1733: Expected expression
(1,57): error CS1002: ; expected
> if (calendar.YearList.Values.Contains(new int[] {1973}))
. {
.     Console.WriteLine("yes it does"); 
. }
> if (calendar.YearList.Values.Contains(new int[] {1973}))
. {
.     Console.WriteLine("yes it does"); 
. }
> if (calendar.YearList.Contains(new KeyValuePair<int, int[]>(2, new int[] { 1973 })))
. {
.     Console.WriteLine("yes it does"); 
. }
> calendar.YearList.Contains(new KeyValuePair<int, int[]>(2, new int[] { 1973 }))
false
> calendar.YearList.Contains(new KeyValuePair<int, int[]>(2, calendar.YearList[2]))
true
> calendar.YearList.Skip(100).First()
System.InvalidOperationException: Sequence contains no elements
  + System.Linq.Enumerable.First<TSource>(IEnumerable<TSource>)
> calendar.YearList.Skip(10)
SkipIterator { { 11, int[18] { 1592, 1620, 1648, 1676, 1716, 1744, 1772, 1812, 1840, 1868, 1896, 1908, 1936, 1964, 1992, 2020, 2048, 2076 } }, { 12, int[16] { 1604, 1632, 1660, 1688, 1728, 1756, 1784, 1824, 1852, 1880, 1920, 1948, 1976, 2004, 2032, 2060 } }, { 13, int[19] { 1588, 1616, 1644, 1672, 1712, 1740, 1768, 1796, 1808, 1836, 1864, 1892, 1904, 1932, 1960, 1988, 2016, 2044, 2072 } }, { 14, int[16] { 1600, 1628, 1656, 1684, 1724, 1752, 1780, 1820, 1848, 1876, 1916, 1944, 1972, 2000, 2028, 2056 } } }
> calendar.YearList.Values.Skip(100)
SkipIterator { }
> calendar.YearList.Values.Skip(10)
SkipIterator { int[18] { 1592, 1620, 1648, 1676, 1716, 1744, 1772, 1812, 1840, 1868, 1896, 1908, 1936, 1964, 1992, 2020, 2048, 2076 }, int[16] { 1604, 1632, 1660, 1688, 1728, 1756, 1784, 1824, 1852, 1880, 1920, 1948, 1976, 2004, 2032, 2060 }, int[19] { 1588, 1616, 1644, 1672, 1712, 1740, 1768, 1796, 1808, 1836, 1864, 1892, 1904, 1932, 1960, 1988, 2016, 2044, 2072 }, int[16] { 1600, 1628, 1656, 1684, 1724, 1752, 1780, 1820, 1848, 1876, 1916, 1944, 1972, 2000, 2028, 2056 } }
> calendar.YearList.Values.Count
14
> calendar.YearList[2].Skip(10)
SkipIterator { 1685, 1691, 1703, 1714, 1725, 1731, 1742, 1753, 1759, 1770, 1781, 1787, 1798, 1810, 1821, 1827, 1838, 1849, 1855, 1866, 1877, 1883, 1894, 1900, 1906, 1917, 1923, 1934, 1945, 1951, 1962, 1973, 1979, 1990, 2001, 2007, 2018, 2029, 2035, 2046, 2057, 2063, 2074 }
> calendar.YearList[2].Skip(14)
SkipIterator { 1725, 1731, 1742, 1753, 1759, 1770, 1781, 1787, 1798, 1810, 1821, 1827, 1838, 1849, 1855, 1866, 1877, 1883, 1894, 1900, 1906, 1917, 1923, 1934, 1945, 1951, 1962, 1973, 1979, 1990, 2001, 2007, 2018, 2029, 2035, 2046, 2057, 2063, 2074 }
> calendar.YearList[2].Count
(1,22): error CS8917: The delegate type could not be inferred.
> calendar.YearList[2].GetValue(22)
1798
> calendar.YearList[2].GetValue(30)
1877
> calendar.YearList[2].GetValue(40)
1962
> calendar.YearList[2].GetValue(41)
1973
> calendar.YearList[2].GetValue(0)
1590
> calendar.YearList[2].GetValue(0..5)
(1,31): error CS0518: Predefined type 'System.Range' is not defined or imported
(1,31): error CS0518: Predefined type 'System.Index' is not defined or imported
(1,34): error CS0518: Predefined type 'System.Index' is not defined or imported
> calendar.YearList[2].GetValue("^..5")
(1,31): error CS1503: Argument 1: cannot convert from 'string' to 'int'
> calendar.YearList[2].GetValue(^2)
(1,31): error CS0518: Predefined type 'System.Index' is not defined or imported
(1,31): error CS0656: Missing compiler required member 'System.Index..ctor'
> calendar.YearList[2].GetValue
(1,22): error CS8917: The delegate type could not be inferred.
> calendar.YearList[2].GetValue(1973, 2020)
System.ArgumentException: Array was not a two-dimensional array.
  + System.Array.GetValue(int, int)
> calendar.YearList[2]
int[53] { 1590, 1601, 1607, 1618, 1629, 1635, 1646, 1657, 1663, 1674, 1685, 1691, 1703, 1714, 1725, 1731, 1742, 1753, 1759, 1770, 1781, 1787, 1798, 1810, 1821, 1827, 1838, 1849, 1855, 1866, 1877, 1883, 1894, 1900, 1906, 1917, 1923, 1934, 1945, 1951, 1962, 1973, 1979, 1990, 2001, 2007, 2018, 2029, 2035, 2046, 2057, 2063, 2074 }
> calendar.YearList[2].GetValue(1629, 1663, 1703)
System.ArgumentException: Array was not a three-dimensional array.
  + System.Array.GetValue(int, int, int)
> calendar.YearList[2].GetValue(1685)
System.IndexOutOfRangeException: Index was outside the bounds of the array.
  + System.Array.InternalGetReference(System.Void*, int, System.Int32*)
  + System.Array.GetValue(int)
> calendar.YearList[2].GetValue(5)
1635
> 